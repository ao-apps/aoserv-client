#
# aoserv-client - Java client for the AOServ Platform.
# Copyright (C) 2016, 2017, 2018, 2019  AO Industries, Inc.
#     support@aoindustries.com
#     7262 Bull Pen Cir
#     Mobile, AL 36695
#
# This file is part of aoserv-client.
#
# aoserv-client is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# aoserv-client is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with aoserv-client.  If not, see <https://www.gnu.org/licenses/>.
#
Server.DrbdReport.ParseException.badColumnCount=Incorrect number of tab-separated columns in line\: {0}
Server.DrbdReport.ParseException.badDeviceStart=Device doesn''t start with /dev/drbd\: {0}
Server.DrbdReport.ParseException.noDash=No dash in resource\: {0}
Server.DrbdReport.ParseException.noSlashInDiskStates=No slash in disk states\: {0}
Server.DrbdReport.ParseException.noSlashInState=No slash in state\: {0}
Server.DrbdReport.ParseException.unexpectedResourceEnding=Unexpected resource ending\: {0}
Server.FilesystemReport.configMessage.extmaxmount.ext3=Max Mount should be -1 for ext3 filesystems: {0}
Server.FilesystemReport.configMessage.extchkint.ext3=Check Interval should be 0 for ext3 filesystems: {0}
Server.FilesystemReport.configMessage.extmaxmount.ext2=Max Mount should not be -1 for ext2 filesystems: {0}
Server.FilesystemReport.configMessage.extchkint.ext2=Check Interval should not be 0 for ext2 filesystems: {0}
Server.getHddModelReport.ParseException.duplicateDevice=Duplicate device\: {0}
Server.getHddModelReport.ParseException.noColon=No colon found parsing line\: {0}
Server.LvmReport.LogicalVolume.parseLsvReport.badColumnCount={0} fields expected, got {1}
Server.LvmReport.LogicalVolume.parseLsvReport.badSegCount=segCount<1\: {0}
Server.LvmReport.LogicalVolume.parseLsvReport.badStripeCount=stripeCount<1\: {0}
Server.LvmReport.LogicalVolume.parseLsvReport.mismatchFreeCount=expectedFreeCount\!\=actualFreeCount for {0}
Server.LvmReport.LogicalVolume.parseLsvReport.mismatchLvCount=expectedLvCount\!\=actualLvCount for {0}
Server.LvmReport.LogicalVolume.parseLsvReport.mismatchStripeCount=segPeRanges.length\!\=stripeCount
Server.LvmReport.LogicalVolume.parseLsvReport.physicalVolumeNotFound=Physical volume not found\: {0}
Server.LvmReport.LogicalVolume.parseLsvReport.segCountChanged=seg_count changed from {0} to {1}
Server.LvmReport.LogicalVolume.parseLsvReport.segmentOverlap={0} and {1} overlap
Server.LvmReport.LogicalVolume.parseLsvReport.segPeRangeNoColon=No colon in segPeRange\: {0}
Server.LvmReport.LogicalVolume.parseLsvReport.segPeRangeNoDash=No dash after colon in segPeRange\: {0}
Server.LvmReport.LogicalVolume.parseLsvReport.stripeOverlap={0} and {1} overlap
Server.LvmReport.LogicalVolume.parseLsvReport.volumeGroupNotFound=VolumeGroup not found\: {0}
Server.LvmReport.PhysicalVolume.parsePvsReport.badColumnCount={0} fields expected, got {1}
Server.LvmReport.PhysicalVolume.parsePvsReport.badVgExtentCount=expectedVgExtentCount\!\=actualVgExtentCount for {0}
Server.LvmReport.PhysicalVolume.parsePvsReport.badVgFreeCount=expectedVgFreeCount\!\=actualVgFreeCount for {0}
Server.LvmReport.PhysicalVolume.parsePvsReport.invalidValues=Invalid values for physical volume\: pvPeCount\={0}, pvPeAllocCount\={1}, vgName\={2}
Server.LvmReport.PhysicalVolume.parsePvsReport.mismatchPvCount=expectedPvCount\!\=actualPvCount for {0}
Server.LvmReport.PhysicalVolume.parsePvsReport.pvNameFoundTwice=pvName found twice\: {0}
Server.LvmReport.PhysicalVolume.parsePvsReport.volumeGroupNotFound=VolumeGroup not found\: {0}
Server.LvmReport.VolumeGroup.parseVgsReport.badColumnCount={0} fields expected, got {1}
Server.LvmReport.VolumeGroup.parseVgsReport.invalidateVgExtentSize=vgExtentSize doesn''t end with ''B''\: {0}
Server.LvmReport.VolumeGroup.parseVgsReport.vgNameFoundTwice=vgName found twice\: {0}
Server.MdMismatchReport.ParseException.badColumnCount=Incorrect number of tab-separated columns in line\: {0}
Server.MdMismatchReport.ParseException.badDeviceStart=Device doesn''t start with /dev/md\: {0}
Server.MdMismatchReport.ParseException.countNotNumber=Cannot parse count\: {0}
Group.Name.validate.isNull=Group name is null
Group.Name.validate.isEmpty=Group name is empty
Group.Name.validate.tooLong=Group name is longer than {0} characters: {1}
Group.Name.validate.startAToZ=Group name must start with a letter from a to z (lowercase)
Group.Name.validate.noSpace=Group name may not contain any spaces
Group.Name.validate.specialCharacter=Group name may not contain any special characters
Group.Name.validate.noCapital=Group name may not contain capital letters
Group.Name.validate.comma=Group name may not contain any commas (,)
Group.Name.validate.colon=Group name may not contain any colons (\:)
Group.Name.validate.leftParen=Group v may not contain any parentheses "("
Group.Name.validate.rightParen=Group name may not contain any parentheses ")"
Group.Name.validate.leftSquare=Group name may not contain any square brackets ([)
Group.Name.validate.rightSquare=Group name may not contain any square brackets (])
Group.Name.validate.apostrophe=Group name may not contain any apostrophes (')
Group.Name.validate.quote=Group name may not contain any quotes (")
Group.Name.validate.verticalBar=Group name may not contain any vertical bars (|)
Group.Name.validate.ampersand=Group name may not contain any ampersands (&)
Group.Name.validate.semicolon=Group name may not contain any semicolons (;)
Group.Name.validate.backslash=Group name may not contain any back slashes (\\)
Group.Name.validate.slash=Group name may not contain any slashes (/)
Group.Name.validate.at=Group name may not contain any at signs (@)
LinuxId.validate.lessThanZero=id<0: {0}
LinuxId.validate.greaterThan64k=id>65535: {0}
PosixPath.validate.isNull=Path is null
PosixPath.validate.empty=Path is empty
PosixPath.validate.startWithNonSlash=Path does not start with /: {0}
PosixPath.validate.containsNullCharacter=Path contains a null character at position {0}
PosixPath.validate.containsDotDot=Path contains /../ at position {0}
PosixPath.validate.containsDot=Path contains /./ at position {0}
PosixPath.validate.containsDoubleSlash=Path contains // at position {0}
PosixPath.validate.endsSlash=Path ends with a /
PosixPath.validate.endsSlashDot=Path ends with /.
PosixPath.validate.endsSlashDotDot=Path ends with /..
User.Gecos.validate.isNull=Gecos is null
User.Gecos.validate.isEmpty=Gecos is empty
User.Gecos.validate.tooLong=Gecos length > {0}: {1}
User.Gecos.validate.invalidCharacter=Invalid character in gecos: {0}
User.Name.validate.isNull=Linux username is null
User.Name.validate.isEmpty=Linux username is empty
User.Name.validate.ampersand=Linux username may not contain any ampersands (&)
User.Name.validate.apostrophe=Linux username may not contain any apostrophes (')
User.Name.validate.backslash=Linux username may not contain any back slashes (\\)
User.Name.validate.colon=Linux username may not contain any colons (\:)
User.Name.validate.comma=Linux username may not contain any commas (,)
User.Name.validate.leftParen=Linux username may not contain any parentheses "("
User.Name.validate.leftSquare=Linux username may not contain any square brackets ([)
User.Name.validate.noCapital=Linux username may not contain capital letters
User.Name.validate.noSpace=Linux username may not contain any spaces
User.Name.validate.quote=Linux username may not contain any quotes (")
User.Name.validate.rightParen=Linux username may not contain any parentheses ")"
User.Name.validate.rightSquare=Linux username may not contain any square brackets (])
User.Name.validate.semicolon=Linux username may not contain any semicolons (;)
User.Name.validate.slash=Linux username may not contain any slashes (/)
User.Name.validate.specialCharacter=Linux username may not contain any special characters
User.Name.validate.startAToZ=Linux username must start with a letter from a to z (lowercase)
User.Name.validate.startWithCyrusAt=Linux username may not start with cyrus@
User.Name.validate.tooLong=Linux username is longer than {0} characters: {1}
User.Name.validate.verticalBar=Linux username may not contain any vertical bars (|)
